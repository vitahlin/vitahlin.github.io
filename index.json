[{"categories":["mysql"],"content":"表结构设计 不在数据库做运算，同时运算的字段也无法使用索引 控制单表数量，纯 INT 不超过1000W行，含 CHAR 不超过500W 合理分表，比如按用户 UserId ，日期，地区等 单库不超过300-400个表 单表分表个数必须控制在1024个以内 表字段少而精，有利于IO高效、全表遍历、表修复快、提高并发、alter table快 单表字段上线控制在20-50个 单表不超过50个纯 INT 字段，不超过20个 CHAR(10) 字段 单表不超过200Byte 适当牺牲范式、加入适当冗余 ","date":"2022-03-15","objectID":"/mysql-design-guideline/:1:0","tags":["mysql"],"title":"Mysql数据库设计规范","uri":"/mysql-design-guideline/"},{"categories":["mysql"],"content":"字段设计 选用合适的数值字段类型，根据业务区分使用 tinyint/int/bigint，分别会占用1/4/8字节 表示是否概念的字段，使用is_xxx命名，数据类型为UNSIGNED TINYINT（1表示是，0表示否） 小数类型为DECIMAL，禁止使用float、double，存在精度缺损 时间类型为BIGINT，统一存储时间戳 字段长度固定或者长度近似的业务场景，适合使用char，能减少碎片，查询性能高 字段长度相差较大，或者更新较少的业务场景适合使用VARCHAR，能够减少空间 将字符串转换为数字，因为数字类型比字符串类型索引更高效、查询更快、占用空间更小 避免使用ENUM，因为增加新类型需要修改表结构 避免使用NULL字段，因为很难进行查询优化，含NULL复合索引无效，NULL列加索引需要额外空间，NULL只能采用 IS NULL或者IS NOT NULL，而在=、!=、in、not in时有大坑 少用并拆分TEXT/BLOB，处理性能远低于VARCHAR，若必须使用则拆分单独的表（建议将大字段，访问频度低的字段拆分到单独的表中存储，分离冷热数据） 不在数据库中存图片，仅保存图片存储地址（文件类同） 使用INT UNSIGNED存储IPv4，不要使用CHAR(15) 使用VARCHAR(20)存储手机号，不要使用整数（涉及到国家代号，可能出现+、-、()等字符，VARCHAR也可以模糊查询，例如：like ‘138%’） ","date":"2022-03-15","objectID":"/mysql-design-guideline/:2:0","tags":["mysql"],"title":"Mysql数据库设计规范","uri":"/mysql-design-guideline/"},{"categories":["mysql"],"content":"索引规范 自增列或全局ID做InnoDB主键，推荐用于独立业务的AUTO_INCREMENT列或者全局ID生成器做代理主键 非唯一索引命名idx_字段名 唯一索引命名uk_字段名 主键索引命名pk_xxx 单表索引数量控制在5个以内 合理添加所以可以改善查询，但会减慢更小，并不是索引越多越好，索引字段最好不超过表字段的20% 字符字段必须建前缀索引，like '%name%'不会使用索引 不在索引列做运算，否则无法使用索引，导致全表扫描 尽量不用外键，高并发时容易死锁（外键使得表之间相互耦合，影响update/delete等SQL性能，有可能造成死锁，高并发情况下容易成为数据库瓶颈） 非必要不要进行JOIN查询，如果要进行JOIN查询，被JOIN的字段必须类型相同，并建立索引 理解组合索引最左前缀原则，避免重复建设索引，如果建立了(a,b,c)相当于建立了(a)、(a,b)、(a,b,c) 防止因字段类型不同造成的隐式转换，导致索引失效 ","date":"2022-03-15","objectID":"/mysql-design-guideline/:3:0","tags":["mysql"],"title":"Mysql数据库设计规范","uri":"/mysql-design-guideline/"},{"categories":["mysql"],"content":"SQL规范 SQL语句尽可能简单，一条SQL语句只能在一个CPU进行运算，5000+QPS的高并发中，可能一条大SQL就把整个数据库堵死 拆解成多条简单SQL，缓存命中率更高，用上更多的CPU；减少锁表时间，特别是MyISAM 事务/连接使用原则：即开即用，用完即关 与事务无关操作放到事务外面，减少资源的占用 不破坏一致性前提下，使用多个短事务代替长事务 尽可能避免使用存储过程、触发器、Event（调试、排错、迁移都比较困难，扩展性较差），减少使用Mysql函数对结果进行处理，由程序端负责 尽量不用select *，只取需要的数据列，不会占用更多的CPU、内存、IO、网络带宽资源 同一个字段，将OR改写为IN，注意IN的个数，建议少于200 不同字段，将OR改成UNION selectidfromtwherephone=’159′orname=‘john’;=\u003eselectidfromtwherephone=’159′unionselectidfromtwherename=’jonh’ 避免负向查询和%前缀模糊查询，使用不了索引，导致全表扫描 尽量不用、少用COUNT(*) LIMIT 高效分页，传统分布 SELECT id FROM user LIMIT 10000, 10，偏移量越大则越慢；推荐分页 SELECT id FROM user WHERE id \u003e= 10000 LIMIT 10 若无需对结果进行去重，使用 UNION ALL 而非 UNION， UNION 有去重开销 高并发DB禁止进行两个表以上的 JOIN 同数据类型的列值进行比较（防止因字段类型不同造成的隐式转换，导致索引失效） 避免大SQL、大事务、大批量长时间占用系统资源而堵塞系统，一个SQL只能在一个CPU运算 尽量不用 INSERT ... SELECT Load data 批量导入数据，尽量避开高峰期操作 使用 EXPLAIN 查看执行计划 观察慢查询日志 show processlist 查看进程状态 MySQL子查询大部分情况下优化较差，特别是 WHERE 中使用 IN id 的子查询，一般可用 JOIN 改写 ","date":"2022-03-15","objectID":"/mysql-design-guideline/:4:0","tags":["mysql"],"title":"Mysql数据库设计规范","uri":"/mysql-design-guideline/"},{"categories":["mysql"],"content":"通用约定 永远不在程序端显示加锁，外部锁对数据库不可控，高并发时是灾难 表存储引擎必须使用InnoDB 统一字符集为UTF8，乱码：SET NAMES UTF8，必要时候使用utf8mb4（utf8mb4是utf8的超集，有存储4字节例如表情符号时，使用它） 库表等名称统一用小写，MySQL库表大小写敏感，字段名的大小写不敏感（Linux VS win） 表名不使用复数名词 必备三个字段 id, create_at, update_at 表命名最好加上“业务名称_表的作用” 库名与服务名最好一致 ","date":"2022-03-15","objectID":"/mysql-design-guideline/:5:0","tags":["mysql"],"title":"Mysql数据库设计规范","uri":"/mysql-design-guideline/"},{"categories":["redis"],"content":"相关版本说明 redis：3.0.0 macOS：11.2.3 CMake：3.19.6 Clion：2020.3.2 ","date":"2022-02-19","objectID":"/use-clion-and-cmake-build-redis3/:1:0","tags":["redis"],"title":"macOS上用Clion CMake编译redis 3.0","uri":"/use-clion-and-cmake-build-redis3/"},{"categories":["redis"],"content":"克隆redis3.0源代码 去Github上面下载3.0版本的代码：https://codeload.github.com/redis/redis/zip/3.0 解压后将目录redis-3.0重新命名为redis 。 ","date":"2022-02-19","objectID":"/use-clion-and-cmake-build-redis3/:2:0","tags":["redis"],"title":"macOS上用Clion CMake编译redis 3.0","uri":"/use-clion-and-cmake-build-redis3/"},{"categories":["redis"],"content":"创建对应的CMakeLists.txt 使用cmake 编译redis 源码的话需要创建对应的CMakeLists.txt 文件，创建完成后，直接在redis 目录执行命令cmake . 即可。 ","date":"2022-02-19","objectID":"/use-clion-and-cmake-build-redis3/:3:0","tags":["redis"],"title":"macOS上用Clion CMake编译redis 3.0","uri":"/use-clion-and-cmake-build-redis3/"},{"categories":["redis"],"content":"redis/deps/hiredis/CMakeLists.txt add_library(hiredis STATIC hiredis.c net.c dict.c net.c sds.c async.c ) ","date":"2022-02-19","objectID":"/use-clion-and-cmake-build-redis3/:3:1","tags":["redis"],"title":"macOS上用Clion CMake编译redis 3.0","uri":"/use-clion-and-cmake-build-redis3/"},{"categories":["redis"],"content":"redis/deps/linenoise/CMakeLists.txt add_library(linenoise linenoise.c) ","date":"2022-02-19","objectID":"/use-clion-and-cmake-build-redis3/:3:2","tags":["redis"],"title":"macOS上用Clion CMake编译redis 3.0","uri":"/use-clion-and-cmake-build-redis3/"},{"categories":["redis"],"content":"redis/deps/lua/CMakeLists.txt set(LUA_SRC src/lapi.c src/lcode.c src/ldebug.c src/ldo.c src/ldump.c src/lfunc.c src/lgc.c src/llex.c src/lmem.c src/lobject.c src/lopcodes.c src/lparser.c src/lstate.c src/lstring.c src/ltable.c src/ltm.c src/lundump.c src/lvm.c src/lzio.c src/strbuf.c src/fpconv.c src/lauxlib.c src/lbaselib.c src/ldblib.c src/liolib.c src/lmathlib.c src/loslib.c src/ltablib.c src/lstrlib.c src/loadlib.c src/linit.c src/lua_cjson.c src/lua_struct.c src/lua_cmsgpack.c src/lua_bit.c ) add_library(lua STATIC ${LUA_SRC}) ","date":"2022-02-19","objectID":"/use-clion-and-cmake-build-redis3/:3:3","tags":["redis"],"title":"macOS上用Clion CMake编译redis 3.0","uri":"/use-clion-and-cmake-build-redis3/"},{"categories":["redis"],"content":"redis/deps/CMakeLists.txt add_subdirectory(hiredis) add_subdirectory(linenoise) add_subdirectory(lua) ","date":"2022-02-19","objectID":"/use-clion-and-cmake-build-redis3/:3:4","tags":["redis"],"title":"macOS上用Clion CMake编译redis 3.0","uri":"/use-clion-and-cmake-build-redis3/"},{"categories":["redis"],"content":"redis/CMakeLists.txt cmake_minimum_required(VERSION 3.0 FATAL_ERROR) project(redis3.0 VERSION 3.0) set(CMAKE_BUILD_TYPE \"Debug\") get_filename_component(REDIS_ROOT \"${CMAKE_CURRENT_SOURCE_DIR}\" ABSOLUTE) add_subdirectory(deps) set(SRC_SERVER src/redis.c ## 解决mac下编译报错问题 ## src/ae_epoll.c src/ae_evport.c src/ae_select.c src/ae_kqueue.c src/adlist.c src/ae.c src/anet.c src/aof.c src/asciilogo.h src/bio.c src/bitops.c src/blocked.c src/cluster.c src/config.c src/crc64.c src/crc16.c src/db.c src/debug.c src/dict.c src/endianconv.c src/hyperloglog.c src/intset.c src/latency.c src/lzf_c.c src/lzf_d.c src/memtest.c src/multi.c src/networking.c src/notify.c src/object.c src/pqsort.c src/pubsub.c src/rand.c src/rdb.c src/release.c src/replication.c src/rio.c src/scripting.c src/sds.c src/sentinel.c src/setproctitle.c src/sha1.c src/slowlog.c src/sort.c src/sparkline.c src/syncio.c src/t_hash.c src/t_list.c src/t_set.c src/t_string.c src/t_zset.c src/util.c src/ziplist.c src/zipmap.c src/zmalloc.c ) set(EXECUTABLE_OUTPUT_PATH src) link_directories(deps/linenoise deps/lua/src deps/hiredis) add_executable(redis-server ${SRC_SERVER}) target_include_directories(redis-server PRIVATE ${REDIS_ROOT}/deps/linenoise PRIVATE ${REDIS_ROOT}/deps/hiredis PRIVATE ${REDIS_ROOT}/deps/lua/src ) target_link_libraries(redis-server PRIVATE pthread PRIVATE dl PRIVATE m PRIVATE lua PRIVATE linenoise PRIVATE hiredis ) set(CLIENT_SRC src/redis-cli.c src/anet.c src/sds.c src/adlist.c src/zmalloc.c src/release.c src/anet.c src/ae.c src/crc64.c ) add_executable(redis-cli ${CLIENT_SRC}) target_include_directories(redis-cli PRIVATE ${REDIS_ROOT}/deps/linenoise PRIVATE ${REDIS_ROOT}/deps/hiredis PRIVATE ${REDIS_ROOT}/deps/lua/src ) target_link_libraries(redis-cli PRIVATE pthread PRIVATE m PRIVATE linenoise PRIVATE hiredis ) ","date":"2022-02-19","objectID":"/use-clion-and-cmake-build-redis3/:3:5","tags":["redis"],"title":"macOS上用Clion CMake编译redis 3.0","uri":"/use-clion-and-cmake-build-redis3/"},{"categories":["redis"],"content":"错误处理 ","date":"2022-02-19","objectID":"/use-clion-and-cmake-build-redis3/:4:0","tags":["redis"],"title":"macOS上用Clion CMake编译redis 3.0","uri":"/use-clion-and-cmake-build-redis3/"},{"categories":["redis"],"content":"fatal error: ‘sys/epoll.h’ file not found 在macOS下编译会出现这个错误，是因为epoll是linux独有的，macOS上并没有sys/epoll.h头文件，因此编译出错。但macOS上使用kqueue代替了epoll，这里可以直接注释相关代码。 redis/CMakeLists.txt中注释下列文件： ## src/ae_epoll.c ## src/ae_evport.c ## src/ae_select.c ## src/ae_kqueue.c ","date":"2022-02-19","objectID":"/use-clion-and-cmake-build-redis3/:4:1","tags":["redis"],"title":"macOS上用Clion CMake编译redis 3.0","uri":"/use-clion-and-cmake-build-redis3/"},{"categories":["redis"],"content":"fatal error: ‘release.h’ file not found 在redis目录下执行脚本即可，用于生成缺失的 release.h 文件。 cd src/ sh mkreleasehdr.sh ","date":"2022-02-19","objectID":"/use-clion-and-cmake-build-redis3/:4:2","tags":["redis"],"title":"macOS上用Clion CMake编译redis 3.0","uri":"/use-clion-and-cmake-build-redis3/"},{"categories":["redis"],"content":"Clion导入项目 直接打开项目，选择 Open as：CMake project，打开后就可以直接运行了， redis-serve 即redis服务端， redis-cli 即客户端。 ","date":"2022-02-19","objectID":"/use-clion-and-cmake-build-redis3/:5:0","tags":["redis"],"title":"macOS上用Clion CMake编译redis 3.0","uri":"/use-clion-and-cmake-build-redis3/"},{"categories":["rust"],"content":"安装 rustup 使用 rustup 安装 rust ，安装 rustup: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh 在 Rust 开发环境中，所有工具都安装在 ~/.cargo/bin 目录中，您可以在这里找到包括 rustc、cargo 和 rustup 在内的 Rust 工具链。 ","date":"2022-02-19","objectID":"/install-and-update-rust/:1:0","tags":["rust"],"title":"rust安装和升级","uri":"/install-and-update-rust/"},{"categories":["rust"],"content":"查看 rust 版本 rustc --version ","date":"2022-02-19","objectID":"/install-and-update-rust/:2:0","tags":["rust"],"title":"rust安装和升级","uri":"/install-and-update-rust/"},{"categories":["rust"],"content":"卸载 rustup self uninstall ","date":"2022-02-19","objectID":"/install-and-update-rust/:3:0","tags":["rust"],"title":"rust安装和升级","uri":"/install-and-update-rust/"},{"categories":["rust"],"content":"升级 rustup update ","date":"2022-02-19","objectID":"/install-and-update-rust/:4:0","tags":["rust"],"title":"rust安装和升级","uri":"/install-and-update-rust/"},{"categories":null,"content":"版权说明 署名-非商业性使用-禁止演绎 4.0 国际 (CC BY-NC-ND 4.0) 联系方式 Mail : linw1225@gmail.com Github : https://github.com/vitahlin ","date":"2019-08-02","objectID":"/about/:0:0","tags":null,"title":"About","uri":"/about/"}]