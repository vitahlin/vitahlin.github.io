<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>c on VitahLin</title><link>https://www.vitahlin.com/tags/c/</link><description>Recent content in c on VitahLin</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Tue, 05 Jul 2022 00:00:00 +0800</lastBuildDate><atom:link href="https://www.vitahlin.com/tags/c/index.xml" rel="self" type="application/rss+xml"/><item><title>左移位和右移位</title><link>https://www.vitahlin.com/2022/07/left-shift-and-right-shift.html/</link><pubDate>Tue, 05 Jul 2022 00:00:00 +0800</pubDate><guid>https://www.vitahlin.com/2022/07/left-shift-and-right-shift.html/</guid><description>左移位 操作符：&amp;lt;&amp;lt; 值最左边的几位被丢弃，右边多出来的几个空位则由0补齐。 例如： 1 2 3 移位前：01101101 左移3位后：0110</description></item><item><title>如何理解复杂的指针或引用语句</title><link>https://www.vitahlin.com/2022/07/how-to-understand-complex-pointer-or-reference-statements.html/</link><pubDate>Sat, 02 Jul 2022 00:00:00 +0800</pubDate><guid>https://www.vitahlin.com/2022/07/how-to-understand-complex-pointer-or-reference-statements.html/</guid><description>面对一条比较复杂的指针或引用的声明语句时，从右向左阅读有助于弄清楚它的含义。 如： 1 2 int *p; int *&amp;amp;r = p; 离变量最近的符号（此例中&amp;amp;r的符号是</description></item></channel></rss>